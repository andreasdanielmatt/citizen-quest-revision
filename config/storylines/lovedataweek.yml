decision:
  en: "It is Love Data Week. You are at a math conference and meet different mathematicians. Interact with them and complete their quests."
  de: "..."
prompt:
  en: "It is Love Data Week :love:. You are at a math conference and meet different mathematicians. Interact with them and complete their quests."
  de: "..."
# initFlags:
  # - inc.mayor
  # - inc.citizenPunk
  # - inc.lawyer
npcs:
  mayor:
    name:
      en: "Felicia Hausvilllage"
      de: "Felicia Hausvilllage"
    spawn: { x: 3240, y: 2974 }
    dialogue:
    - type: sequence
      items:
        - text:
            en: "I am a topologist."
            de: "..."
  robot:
    name:
      en: "Robot"
      de: "Roboter"
    spawn: { x: 3540, y: 2974 }
    dialogue:
      - type: random
        items:
          - text:
              en: "“Mathematics is the queen and servant of sciences”, according to a quote by Carl F. Gauss."
              de: "..."
          - text:
              en: "Is Mathematics even a science?"
              de: "..."
          - text:
              en: "Research data are not only empirical records."
              de: "..."
          - text:
              en: "In modern mathematical research, we can find many types of data."
              de: "..."
          - text:
              en: "One key difference between mathematics and other sciences is the existence of proofs."
              de: "..."
          - text:
              en: "Have you subscribed to the MaRDI newsletter, yet?"
              de: "..."
          - text:
              en: "Mathematics is not especially well placed in terms of managing research data and software in comparison to other fields."
              de: "..."
          - text:
              en: "Data must be accompanied by rich metadata that describes it."
              de: "..."
          - text:
              en: "Storing and archiving research data is not a trivial matter and should be planned carefully."
              de: "..."
          - text:
              en: "Information is data tagged with meaning."
              de: "..."
          - text:
              en: "Reusing knowledge is ingrained in the practice of scientific research as the basis of verifiability."
              de: "..."
          - text:
              en: "Access to research information is the most fundamental principle for spreading science across the scientific community and society."
              de: "..."
          - text:
              en: "I :love: math!"
              de: "..."
            set: [ 'op.love.1' ]
          - text:
              en: "Your math is data!"
              de: "..."
  citizenBraid:
    name:
      en: "Tabea"
      de: "Tabea"
    spawn: { x: 2673, y: 3130 }
    dialogue:
      - text:
          en: "I work at the MaRDI help desk. I will help you with questions about data."
          de: "..."   
  citizenPunk:
    name:
      en: "Carla Gaudi"
      de: "Carla Gaudi"
    spawn: { x: 3671, y: 2930 }
    dialogue:
      - text:
          en: "I am a statistician and I love data :love:!"
          de: "Ich bin Statistikerin"
        set: [ 'op.love.2' ]
  citizenPuan:
    name:
      en: "Jenny Ober-Lupus"
      de: "Jenny Ober-Lupus"
    spawn: { x: 4000, y: 3150 }
    dialogue:
      - text:
          en: "I am a librarian."
          de: "Ich bin Bibliothekar*in"
  citizenBlue:
    name:
      en: "Christiane"
      de: "Christiane"
    spawn: { x: 2553, y: 3130 }
    dialogue:
      - text:
          en: "Do you know, there is a real MaRDI help desk at the MaRDI website? Check it out after the game."
          de: "..."
  lawyer:
    name:
      en: "Muhammad Quartz"
      de: "Muhammad Quartz"
    spawn: { x: 2803, y: 2915 }
    dialogue:
      - text:
          en: "I am an algebraist."
          de: "..."
quests:
  favor:
    npc: mayor
    mood: interrogation
    available:
      dialogue:
        - type: sequence
          items:
            - text:
                en: "I am a topologist."
                de: "..."
            - text:
                en: "I publish articles and draw example images. I have also programmed a tool to create visualizations." 
                de: "..."
            - text:
                en: "Would you help me find out, if this is considered data?"
              responses:
                - text:
                    en: "No, sorry. I am busy writing an important proposal. Goodbye."
                    de: "..."
                  thenText:
                    en: "Bye, bye. Feel free to chat again anytime."
                    de: "..."
                - text:
                    en: "Sure, I will help you."
                    de: "..."
                  thenText:
                    en: "Thank you!"
                    de: "..."
                  set: [ 'quest.favor.active' ]
    stages:
      - cond: 'COUNT("op.favor") >= 3'
        prompt:
          en: "You can let Felicia Hausvilllage know."
          de: "Du kannst Felicia Hausvilllage Bescheid geben."
        target: mayor
        dialogues:
          mayor:
            - text:
                en: "Good to know: articles, drawings, and software tools are data."
                de: "..."
              set: [ 'quest.favor.done', 'pnt.empathy.favor' , 'op.quest.favor']
          lawyer:
            - text:
                en: "You are looking for Felicia? I had a coffee with her a few minutes ago. She is over there."
                de: "..."
          citizenPunk:
            - text:
                en: "I am Carla, not Felicia! You are so confused!"
                de: "..."
          citizenBraid:
            - text:
                en: "If you want to know more about the types of research data in mathematics, check out the sixth issue of the MaRDI Newsletter. You will :love: it!"
                de: "..."
              set: [ 'op.love.4' ]
          citizenBlue:
            - text:
                en: "You can download a cool postcard at the MaRDI website with an illustration for each of the research data types in mathematics."
                de: "..."
          citizenPuan:
            - text:
                en: "Have you been to the library at the MFO in Oberwolfach?"
                de: "..."
      - prompt:
          en: "Find out if articles, drawings, and software tools are data."
          de: "..."
        counter:
          expression: 'COUNT("op.favor")'
          max: 3
          icon: happy
        dialogues:
          mayor:
            - text:
                en: "I am not sure, if articles, drawings and software are considered data."
                de: "..."
          lawyer:
            - text:
                en: "I am an algebraist and I’m pretty sure, articles are data. To be 100% sure, ask at the library."
                de: "..."
          citizenBraid:
            - text:
                en: "Software is data. From small scripts that help in a particular problem to wide libraries that integrate into larger frameworks."
                de: "..."
              set: [ 'op.favor.citizenBraid' ]
          citizenBlue:
            - text:
                en: "Visualizations and examples (including images, animations, and other types of graphics) are data. They have an enormous value for understanding and developing a theory and deserve a full research data curation."
                de: "..."
              set: [ 'op.favor.citizenHipster' ]
          citizenPunk:
            - text:
                en: "I am a statistician. I don't think drawings are data. But I'm not sure. You should ask the MaRDI help desk. I usually don't like to be around too many people, but the MaRDIans are very nice! :love:"
                de: "..."
              set: [ 'op.love.6' ]
          citizenPuan:
            - text:
                en: "Documents (articles, books) are data. Mathematical texts deserve the same treatment as other forms of structured data."
                de: "..."
              set: [ 'op.favor.citizenPuan' ]
  publish:
    npc: lawyer
    mood: exclamation
    available:
      dialogue:
        - type: sequence
          items:
            - text:
                en: "Hi, I am an algebraist. I just published some of my software code."
                de: "..."
            - text:
                en: "I used my ORCID iD and my Zenodo account."
                de: "..."
            - text:
                en: "Would you like to have your own ORCID iD and Zenodo account?"
                de: "..."
              responses:
                - text:
                    en: "Sure, I will will try to set it up right now."
                    de: "..."
                  thenText:
                    en: "Great! If you need more information about ORCID or Zenodo, ask at the MaRDI help desk."
                    de: "..."
                  set: [ 'quest.publish.active' ]
                - text:
                    en: "No, sorry, I have no idea. I am too old for this fancy internet stuff."
                    de: "..."
                  thenText:
                    en: "You might want to check out the first issue of the MaRDI newsletter to get an introduction to the topic."
                    de: "..."
                - text:
                    en: "Actually, I already have both."
                    de: "..."
                  thenText:
                    en: "Congratulations!"
                    de: "..."
                  set: [ 'quest.publish.active', 'found.publish.zenodo', 'found.publish.orcid', 'quest.publish.done', 'pnt.empathy.publish' , 'op.quest.publish' ]
    stages:
      - cond: 'found.publish.orcid & ^found.publish.zenodo'
        prompt:
          en: "You got an ORCID iD. Now you can create a Zenodo account to publish your paper."
          de: "..."
        dialogues:
          lawyer:
            - text:
                en: "Congratulations to your ORCID iD. You need to create a Zenodo account now."
                de: "..."
          citizenPunk:
            - text:
                en: "I am a statistician. Of course, I have a Zenodo account. But I am too busy to help you. Ask the robot."
                de: "..."
          robot:
            - text:
                en: "I am happy to create a Zenodo account for you. All done, congratulations."
                de: "..."
              set: [ 'found.publish.zenodo', 'quest.publish.done', 'pnt.empathy.publish' , 'op.quest.publish']
          citizenBlue:
            - text:
                en: "Zenodo is a general-purpose open repository. It allows researchers to deposit research papers, data sets, research software, reports, and any other research related digital artefacts. The robot can create an account for you."
                de: "..."
          citizenBraid:
            - text:
                en: "You already got your ORCID iD. However, if you are still wondering what it is: ORCID, wich stands for Open Researcher and Contributor ID, is a global, not-for-profit organization. It provides a persistent digital identifier (an ORCID iD) that you own and control, and that distinguishes you from every other researcher."
                de: "..."
          mayor:
            - text:
                en: "Congratulations to your ORCID iD. :love:"
                de: "..."
              set: ['op.love.5']
          citizenPuan:
            - text:
                en: "I cannot help you at the moment. I need to prepare, classify and maintain our media collection."
                de: "..."
      - cond: '^found.publish.orcid & ^found.publish.zenodo'
        prompt:
          en: "Create an ORCID iD."
          de: "..."
        dialogues:
          lawyer:
            - text:
                en: "You need to create an ORCID iD first."
                de: "..."
          robot:
            - text:
                en: "Come back when you have your ORCID iD. Then we can create your Zenodo account."
                de: "..."
          citizenBlue:
            - text:
                en: "Zenodo is a general-purpose open repository. It allows researchers to deposit research papers, data sets, research software, reports, and any other research related digital artefacts."
                de: "..."
          citizenPuan:
            - text:
                en: "I am happy to create an ORCID iD with you. We can use one of the library tablets with free WiFi."
                de: "..."
              set: [ 'found.publish.orcid' ]
          citizenBraid:
            - text:
                en: "ORCID, wich stands for Open Researcher and Contributor ID, is a global, not-for-profit organization. It provides a persistent digital identifier (an ORCID iD) that you own and control, and that distinguishes you from every other researcher. You can go to the library to get an iD."
                de: "..."
          mayor:
            - text:
                en: "I am a topologist. I got my own ORCID iD at the library. They also have great coffee. :love:"
                de: "..."
              set: ['op.love.8']
          citizenPunk:
            - text:
                en: "Please, don't disturb me. I am coding..."
                de: "..."
  exchange:
    npc: citizenPunk
    mood: interrogation
    available:
      dialogue:
        - type: sequence
          items:
            - text:
                en: "Hi, I am a statistician."
                de: "..."
            - text:
                en: "I have a discrete statistical model and I would like to understand its geometry. I know Dr. Quartz from the Al-Jabr Institute was working on this but I cannot find any of his code online."
                de: "..."
            - text:
                en: "Can you help me get his research data?"
                de: "..."
              responses:
                - text:
                    en: "Sure, I will  try to find it for you."
                    de: "..."
                  thenText:
                    en: "Thank you! If you have no idea where to start, go to the MaRDI help desk."
                    de: "..."
                  set: [ 'quest.exchange.active' ]
                - text:
                    en: "Why don't you ask him yourself? He is over there, close to the MaRDI help desk."
                    de: "..."
                  thenText:
                    en: "I am afraid of crowds. There are always so many colleagues around him. Come back if you change your mind and want to help me."
                    de: "..."
    stages:
      - cond: 'found.exchange.person & found.exchange.carla & found.exchange.quartz & found.exchange.help'
        prompt:
          en: "Tell Muhammad Quartz how to share his code."
          de: "..."
        target: lawyer
        dialogues:
          lawyer:
            - type: sequence
              items:
                - text:
                    en: "Thank you for letting me know about the different repository options."
                    de: "..."
                - text:
                    en: "I will upload my Julia code during lunch break. Then I will try to find Dr. Gaudi. Maybe we can collaborate in the future."
                    de: "..."
                  responses:
                    - text:
                        en: "I am happy to introduce you to Dr. Gaudi."
                        de: "..."
                      thenText:
                        en: "Great, thank you!"
                        de: "..."
                  set: [ 'quest.exchange.done' , 'pnt.empathy.exchange' , 'op.quest.exchange' ]
          mayor:
            - text:
                en: "Ah, I know Muhammad, just talked to him during the coffee break."
                de: "..."
          citizenPunk:
            - text:
                en: "I really need Dr. Quartz's Julia code. Did you ask him yet to give it to me?"
                de: "..."
          citizenBlue:
            - text:
                en: "*some cool fact about a MaRDI service*"
                de: "..."
          citizenPuan:
            - text:
                en: "*some cool data fact*"
                de: "..."
          citizenBraid:
            - text:
                en: "*some cool fact about a MaRDI service*"
                de: "..."
      - cond: 'found.exchange.person & found.exchange.carla & found.exchange.quartz & ^found.exchange.help'
        prompt:
          en: "Ask the MaRDI help desk for the best way to share code."
          de: "..."
        target: citizenBraid
        dialogues:
          citizenBraid:
            - type: sequence
              items:
                - text:
                    en: "There are several repositories you can use for your research data: institutional repositories from your university or institute, discipline-specific ones for your research area, or generic ones like Zenodo. "
                    de: "..."
                  responses:
                    - text:
                        en: "Ok, thank you."
                        de: "..."
                    - text:
                        en: "Which of those is the best choice?"
                        de: "..."
                      thenText:
                        en: "If you are able to find a discipline-specific repository for your research data, this will be the best option for you. :love:"
                        de: "..."
                      set: [ 'op.love.3' ]
                  set: [ 'found.exchange.help' ]
          mayor:
            - text:
                en: "Ah, I know Muhammad, just talked to him during the coffee break."
                de: "..."
          lawyer:
            - text:
                en: "Please ask at the MaRDI help desk, what is the best way to share my code. I know, they offer a course on managing research data."
                de: "..."
          citizenPunk:
            - text:
                en: "I really need Dr. Quartz's Julia code. Did you ask him yet to give it to me?"
                de: "..."
          citizenBlue:
            - text:
                en: "*some cool fact about a MaRDI service*"
                de: "..."
          citizenPuan:
            - text:
                en: "*some cool data fact*"
                de: "..."
      - cond: 'found.exchange.person & found.exchange.carla & ^found.exchange.quartz & ^found.exchange.help'
        prompt:
          en: "Ask Muhammad Quartz to make the code available."
          de: "..."
        target: lawyer
        dialogues:
          lawyer:
            - type: sequence
              items:
                - text:
                    en: "I work in Julia using OSCAR and Singular. The code is stored on my private laptop. If Dr. Gaudi is interested, I can make it available for her."
                    de: "..."
                - text:
                    en: "How should I share the data?"
                    de: "..."
                  responses:
                    - text:
                        en: "Just print out the code. I will carry the stack of paper over to her."
                        de: "..."
                      thenText:
                        en: "I don't like that idea. Please ask at the MaRDI help desk for a better solution. I know, they offer a course on managing research data."
                        de: "..."
                    - text:
                        en: "I am not sure. I will ask at the MaRDI help desk."
                        de: "..."
                      thenText:
                        en: "That's a good idea. I know, they offer a course on managing research data."
                        de: "..."
                    - text:
                        en: "Upload your code to a trusted repository."
                        de: "..."
                      thenText:
                        en: "Please ask at the MaRDI help desk, which kind of repository I should choose. I know, they offer a course on managing research data."
                        de: "..."
                  set: [ 'found.exchange.quartz' ]
          mayor:
            - text:
                en: "Ah, I know Muhammad, just talked to him during the coffee break."
                de: "..."
          citizenPunk:
            - text:
                en: "I really need Dr. Quartz's code. Did you ask him yet to give it to me?"
                de: "..."
          citizenBlue:
            - text:
                en: "*some cool fact about a MaRDI service*"
                de: "..."
          citizenPuan:
            - text:
                en: "*some cool data fact*"
                de: "..."
          citizenBraid:
            - text:
                en: "*some cool fact about a MaRDI service*"
                de: "..."
      - cond: 'found.exchange.person & ^found.exchange.carla & ^found.exchange.quartz & ^found.exchange.help'
        prompt:
          en: "Let Carla Gaudi know."
          de: "..."
        target: citizenPunk
        dialogues:
          citizenPunk:
            - text:
                en: "Thank you for letting me know. I would like to use Dr. Quartz's code to transform a parametrization into an algebraic variety to understand its geometry. Please ask him to give it to me!"
                de: "..."
              set: [ 'found.exchange.carla']
          lawyer:
            - text:
                en: "Tell Dr. Gaudi about my paper. It is available online. Maybe she doesn't need the code?"
                de: "..."
          mayor:
            - text:
                en: "Ah, I know Muhammad, just talked to him during the coffee break."
                de: "..."
          citizenBlue:
            - text:
                en: "*some cool fact about a MaRDI service*"
                de: "..."
          citizenPuan:
            - text:
                en: "I :love: the Black Forest, especially in carnival season!"
                de: "..."
              set: [ 'op.love.7' ]
          citizenBraid:
            - text:
                en: "*some cool fact about a MaRDI service*"
                de: "..."
      - cond: '^found.exchange.person & ^found.exchange.carla & ^found.exchange.quartz & ^found.exchange.help'
        prompt:
          en: "Find the work by Dr. Quartz from the Al-Jabr Intitute."
          de: "..."
        dialogues:
          citizenPunk:
            - text:
                en: "You could meet him over there and ask him directly."
                de: "..."
          robot:
            - text:
                en: "I did a quick online search for you. He published a paper on implicitization and elimination techniques. However, the corresponding code is not included."
                de: "..."
              set: [ 'found.exchange.person' ]
          citizenBlue:
            - text:
                en: "You could ask the robot to do an online search for you."
                de: "..."
          citizenPuan:
            - text:
                en: "Dr. Quartz published a paper on implicitization and elimination techniques. However, the corresponding code is not included, unfortunately."
                de: "..."
              set: [ 'found.exchange.person' ]
          citizenBraid:
            - text:
                en: "You could ask at the library, if they have any papers or books on implicitization and elimination techniques by that author."
                de: "..."
          mayor:
            - text:
                en: "Ah, I know Muhammad, just talked to him during the coffee break."
                de: "..."
          lawyer:
            - type: sequence
              items:
                - text:
                    en: "Yes, I work on implicitization and elimination techniques and can transform a parametrization into an algebraic variety to understand its geometry. The code is stored on my private laptop, though."
                    de: "..."
                - text:
                    en: "I published a paper on the topic without including the code. Maybe this will help Dr. Gaudi?"
                    de: "..."
                  set: [ 'found.exchange.person' ]
ending:
  dialogue:
    - type: sequence
      items:
        - cond: 'COUNT("op.favor") >= 3'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: 'You found out about three types of mathematical research data. :love:'
                de: '...'
        - cond: 'COUNT("op.favor") < 3'
          type: sequence
          items:
            - text:
                en: "You did not answer Felicia's questions."
                de: "..."
        - cond: 'quest.publish.done'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: 'You created an ORCID iD and a Zenodo account. :love:'
                de: '...'
        - cond: '^found.publish.orcid & ^found.publish.zenodo'
          type: sequence
          items:
            - text:
                en: "You did not complete Muhammad's quest."
                de: "..."
        - cond: 'found.publish.orcid & ^found.publish.zenodo'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: "You ceated an ORCID iD but not a Zenodo account."
                de: "..."
        - cond: 'quest.exchange.done'
          class: 'citizensEmpowered'
          type: sequence
          items:
            - text:
                en: "You helped Carla to get the code from Muhammad. :love:"
                de: "..."
        - cond: '^quest.exchange.done'
          type: sequence
          items:
            - text:
                en: "You did not complete Carla's quest."
                de: "..."
        - cond: 'COUNT("op.quest") = 0'
          type: sequence
          items:
            - text:
                en: "You did not complete any of the three quests. Try again!"
                de: "..."
        - cond: 'COUNT("op.quest") = 1'
          type: sequence
          items:
            - text:
                en: "You completed one of the three quests :love:."
                de: "..."
        - cond: 'COUNT("op.quest") = 2'
          type: sequence
          items:
            - text:
                en: "You completed two of the three quests :love::love:."
                de: "..."
        - cond: 'COUNT("op.quest") = 3'
          type: sequence
          items:
            - text:
                en: "Congratulations, you completed all of the three quests! :love::love::love:"
                de: "..."
        - cond: 'COUNT("op.love") = 0'
          text:
            en: "You didn't find any of the eight :love: hidden in the dialogues."
            de: "..."
        - cond: 'COUNT("op.love") = 1'
          text:
            en: "You found one of the eight :love: hidden in the dialogues."
            de: "..."
        - cond: 'COUNT("op.love") = 2'
          text:
            en: "You found two of the eight :love: hidden in the dialogues."
            de: "..."
        - cond: 'COUNT("op.love") = 3'
          text:
            en: "You found three of the eight :love: hidden in the dialogues."
            de: "..."
        - cond: 'COUNT("op.love") = 4'
          text:
            en: "You found four of the eight :love: hidden in the dialogues."
            de: "..."
        - cond: 'COUNT("op.love") = 5'
          text:
            en: "You found five of the eight :love: hidden in the dialogues."
            de: "..."
        - cond: 'COUNT("op.love") = 6'
          text:
            en: "You found six of the eight :love: hidden in the dialogues."
            de: "..."
        - cond: 'COUNT("op.love") = 7'
          text:
            en: "You found seven of the eight :love: hidden in the dialogues."
            de: "..."
        - cond: 'COUNT("op.love") = 8'
          text:
            en: "You found all of the eight :love: hidden in the dialogues."
            de: "..."
